language: go
sudo: false
matrix:
  include:
    # "1.x" always refers to the latest Go version, inc. the patch release.
    - go: 1.x
      env: LATEST=true
    - go: tip
  allow_failures:
    - go: tip

before_install:
  # gox simplifies building for multiple architectures
  - go get github.com/mitchellh/gox
  - go get github.com/anacrolix/utp

install:
  - # skip

script:
  - go get -t -v ./...
  - diff -u <(echo -n) <(gofmt -d .)
  - go vet $(go list ./... | grep -v /vendor/)
  - go test -v -race ./...
  # Only build binaries from the latest Go release.
  - if [ "${LATEST}" = "true" ]; then gox -os="linux darwin windows" -arch="amd64" -output="mf.{{.OS}}.{{.Arch}}" -ldflags "-X main.Rev=`git rev-parse --short HEAD`" -verbose ./...; fi

deploy:
  provider: releases
  skip_cleanup: true
  api_key:
    secure: ClS8iW4waKjkNmyXGQgm4xJDxR9yVEL3NIkT90J2yR7qOKVIIlia7dZaubu0BgArPEhn2sk0BbNlKnk7XNWir20TbJlW/2Y+qMotszxPxT2+z98mAuS4hyHJpLP1KhP2eFX48oy6fyIRBvoTeN+ULCsan/g9IruYsoH91NXtJ8qqtV+6/D5HavKoM4Ery3BO3Qju/ut8qNUQy/TeygjddIMIONFt6nkXeQyL8rGi1FbKs8ZhRG7Ycb+iI/fUa+TbYImfQYRavgfTR5TceY1SPMlQuAc3GE6plHBSeAryqylcfyuvUV6DYKtHzjZ87UoOsbxAyt6mvHbHjZsfhBO8euu1DPRgUVhfMl6wIPALRGSGsGFyYg/359+FC2BZQDHYRhI9b7aEUEVoKdjrpbyGvStTpKoYaGK7zwUe6fBbPSB/O6WrmEZmgDvb9ekJUsJVcJECaynLoWoKpq2uds8sJHtZFwa34gBDlt0Sl0FeAv732rAWladPA/+EX5ctgqhfkPnm8EJyDGMOeYMmN02esK3H40/AgCHjO6HxC+LuVAxYu7kRm/G3MrHhjdtwRdgn64kVwVR5nj2B55LQE4EotCZGI1sJkUZf2JNziN/MT7yYNbbdKR+e5286FvI/QyV46tUyqsU0IUHTo2JJHt8MfEBi9TPZ9Ko1FoazzB+yZ/c=
  file:
  # The names of the binaries to output, based on the -output template passed to gox.
  - mf.windows.amd64.exe
  - mf.darwin.amd64
  - mf.linux.amd64
  on:
    # What to repository to build
    repo: yonson2/mf
    # Only build binaries for tagged commits
    tags: true
    condition: $LATEST = true
